#pragma once

// https://www.chessprogramming.org/Simplified_Evaluation_Function

const char pst[6][64] = {
  {
      0,  0,  0,   0,   0,   0,   0,  0,   // Pawn
      50, 50, 50,  50,  50,  50,  50, 50,  //
      10, 10, 20,  30,  30,  20,  10, 10,  //
      5,  5,  10,  25,  25,  10,  5,  5,   //
      0,  0,  0,   20,  20,  0,   0,  0,   //
      5,  -5, -10, 0,   0,   -10, -5, 5,   //
      5,  10, 10,  -20, -20, 10,  10, 5,   //
      0,  0,  0,   0,   0,   0,   0,  0    //
  },
  {
      -50, -40, -30, -30, -30, -30, -40, -50,  // Knight
      -40, -20, 0,   0,   0,   0,   -20, -40,  //
      -30, 0,   10,  15,  15,  10,  0,   -30,  //
      -30, 5,   15,  20,  20,  15,  5,   -30,  //
      -30, 0,   15,  20,  20,  15,  0,   -30,  //
      -30, 5,   10,  15,  15,  10,  5,   -30,  //
      -40, -20, 0,   5,   5,   0,   -20, -40,  //
      -50, -40, -30, -30, -30, -30, -40, -50,  //
  },
  {
      -20, -10, -10, -10, -10, -10, -10, -20,  // Bishop
      -10, 0,   0,   0,   0,   0,   0,   -10,  //
      -10, 0,   5,   10,  10,  5,   0,   -10,  //
      -10, 5,   5,   10,  10,  5,   5,   -10,  //
      -10, 0,   10,  10,  10,  10,  0,   -10,  //
      -10, 10,  10,  10,  10,  10,  10,  -10,  //
      -10, 5,   0,   0,   0,   0,   5,   -10,  //
      -20, -10, -10, -10, -10, -10, -10, -20,  //
  },
  {
      0,  0,  0,  0,  0,  0,  0,  0,   // Rook
      5,  10, 10, 10, 10, 10, 10, 5,   //
      -5, 0,  0,  0,  0,  0,  0,  -5,  //
      -5, 0,  0,  0,  0,  0,  0,  -5,  //
      -5, 0,  0,  0,  0,  0,  0,  -5,  //
      -5, 0,  0,  0,  0,  0,  0,  -5,  //
      -5, 0,  0,  0,  0,  0,  0,  -5,  //
      0,  0,  0,  5,  5,  0,  0,  0    //
  },
  {
      -20, -10, -10, -5, -5, -10, -10, -20,  // Queen
      -10, 0,   0,   0,  0,  0,   0,   -10,  //
      -10, 0,   5,   5,  5,  5,   0,   -10,  //
      -5,  0,   5,   5,  5,  5,   0,   -5,   //
      0,   0,   5,   5,  5,  5,   0,   -5,   //
      -10, 5,   5,   5,  5,  5,   0,   -10,  //
      -10, 0,   5,   0,  0,  0,   0,   -10,  //
      -20, -10, -10, -5, -5, -10, -10, -20   //
  },
  {
      -30, -40, -40, -50, -50, -40, -40, -30,  // King
      -30, -40, -40, -50, -50, -40, -40, -30,  //
      -30, -40, -40, -50, -50, -40, -40, -30,  //
      -30, -40, -40, -50, -50, -40, -40, -30,  //
      -20, -30, -30, -40, -40, -30, -30, -20,  //
      -10, -20, -20, -20, -20, -20, -20, -10,  //
      20,  20,  0,   0,   0,   0,   20,  20,   //
      20,  30,  10,  0,   0,   10,  30,  20    //
  }};

const char pst_k_end[64] = {
    -50, -40, -30, -20, -20, -30, -40, -50,  //
    -30, -20, -10, 0,   0,   -10, -20, -30,  //
    -30, -10, 20,  30,  30,  20,  -10, -30,  //
    -30, -10, 30,  40,  40,  30,  -10, -30,  //
    -30, -10, 30,  40,  40,  30,  -10, -30,  //
    -30, -10, 20,  30,  30,  20,  -10, -30,  //
    -30, -30, 0,   0,   0,   0,   -30, -30,  //
    -50, -30, -30, -30, -30, -30, -30, -50   //
};

// https://www.chessprogramming.org/Center_Manhattan-Distance

const char pst_cmd[64] = {
    6, 5, 4, 3, 3, 4, 5, 6,  //
    5, 4, 3, 2, 2, 3, 4, 5,  //
    4, 3, 2, 1, 1, 2, 3, 4,  //
    3, 2, 1, 0, 0, 1, 2, 3,  //
    3, 2, 1, 0, 0, 1, 2, 3,  //
    4, 3, 2, 1, 1, 2, 3, 4,  //
    5, 4, 3, 2, 2, 3, 4, 5,  //
    6, 5, 4, 3, 3, 4, 5, 6   //
};

// https://www.chessprogramming.org/Center_Distance

const char pst_cd[64] = {
    3, 3, 3, 3, 3, 3, 3, 3,  //
    3, 2, 2, 2, 2, 2, 2, 3,  //
    3, 2, 1, 1, 1, 1, 2, 3,  //
    3, 2, 1, 0, 0, 1, 2, 3,  //
    3, 2, 1, 0, 0, 1, 2, 3,  //
    3, 2, 1, 1, 1, 1, 2, 3,  //
    3, 2, 2, 2, 2, 2, 2, 3,  //
    3, 3, 3, 3, 3, 3, 3, 3   //
};

const int piece_val[13] = {
    -10000,  // bK
    -900,    // bQ
    -500,    // bR
    -300,    // bB
    -250,    // bN
    -100,    // bP
    0,       // Empty
    100,     // wP
    250,     // wN
    300,     // wB
    500,     // wR
    900,     // wQ
    10000    // wK
};